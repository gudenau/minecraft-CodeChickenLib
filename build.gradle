plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = 'https://maven.covers1624.net'
        name = 'covers1624'
        content {
            includeGroup 'net.covers1624'
        }
    }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
        }
    }

    maven {
        url 'https://maven.jamieswhiteshirt.com/libs-release'
        content {
            includeGroup 'com.jamieswhiteshirt'
        }
    }

    maven { url = "https://jitpack.io/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation(include("net.covers1624:Quack:${project.quackVersion}"))
    modImplementation(include("io.github.ladysnake:satin:${project.satinVersion}"))
    modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${project.reachEntityAttributesVersion}"))
    implementation(include("com.electronwill.night-config:core:${project.nightConfigVersion}"))
    modImplementation(include("io.github.fabricators_of_create:Porting-Lib:${project.portingLibVersion}"))
}

loom {
    accessWidenerPath = file('src/main/resources/codechickenlib.accesswidener')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += [
        '-Xmaxerrs', '1000'
    ]
}

java {
    withSourcesJar()

    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
